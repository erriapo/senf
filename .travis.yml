matrix:
  allow_failures:
    - python: "pypy3"
  include:
    - os: linux
      dist: trusty
      language: python
      python: "2.7"
      env: TYPE="linux" PYVER="2.7" PYARGS="-R"
    - os: linux
      dist: trusty
      language: python
      python: "3.3"
      env: TYPE="linux" PYVER="3.3" PYARGS="-R -bb"
    - os: linux
      dist: trusty
      language: python
      python: "3.4"
      env: TYPE="linux" PYVER="3.4" PYARGS="-R -bb"
    - os: linux
      dist: trusty
      language: python
      python: "3.5"
      env: TYPE="linux" PYVER="3.5" PYARGS="-R -bb"
    - os: linux
      dist: trusty
      language: python
      python: "nightly"
      env: TYPE="linux" PYVER="nightly" PYARGS="-R -bb"
    - os: linux
      dist: trusty
      language: python
      python: "pypy"
      env: TYPE="linux" PYVER="pypy" PYARGS="-R"
    - os: linux
      dist: trusty
      language: python
      python: "pypy3"
      env: TYPE="linux" PYVER="pypy3" PYARGS="-R -bb"
    - os: linux
      language: generic
      sudo: required
      dist: trusty
      env: TYPE="windows" PYVER="2.7.11" PYARGS="-R"
    - os: linux
      language: generic
      sudo: required
      dist: trusty
      env: TYPE="windows" PYVER="3.3.5" PYARGS="-R -bb"
    - os: linux
      language: generic
      sudo: required
      dist: trusty
      env: TYPE="windows" PYVER="3.4.4" PYARGS="-R -bb"

install:
  - if [ "$TYPE" == "windows" ]; then sudo dpkg --add-architecture i386; fi
  - if [ "$TYPE" == "windows" ]; then travis_retry sudo apt-get update -q; fi
  - if [ "$TYPE" == "windows" ]; then travis_retry sudo apt-get install --no-install-recommends -y wine xvfb; fi
  - if [ "$TYPE" == "linux" ]; then travis_retry sudo apt-get install --no-install-recommends -y python3-pytest python-pytest; fi

script:
  - if [ "$TYPE" == "linux" ]; then eval python $PYARGS -m pytest tests; fi
  - if [ "$TYPE" == "windows" ]; then eval xvfb-run -a ./run_wine.sh "$PYVER" $PYARGS -m pytest tests; fi
